%matplotlib inline
import numpy as np
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
from matplotlib import style
from sklearn.metrics import r2_score
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor

style.use('seaborn-talk')

df = pd.read_csv('./data/housing.data', header=None, sep='\s+')
df.columns = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']

X = df[['LSTAT']].values
y = df['MEDV'].values

rm = DecisionTreeRegressor(max_depte=3)
# Random Forest code
# rm = RandomForestRegressor(n_estimators=1000, criterion='mse', random_state=1, n_jobs=-1)
rm.fit(X,y)

sort_idx = X.ravel().argsort()

r2 = r2_score(y[sort_idx], rm.predict(X[sort_idx]))

plt.scatter(X[sort_idx], y[sort_idx], c='lightgray', label='Training Data')
plt.plot(X[sort_idx], rm.predict(X[sort_idx]), c='r', label='tree, $R^2=%.2f$' %r2)
plt.xlabel('Low population percent ratio[LSTAT]')
plt.ylabel('1000USD housing price[MEDV]')
plt.legend()
plt.show()
